{"ast":null,"code":"/* eslint no-restricted-globals: 0 */\nimport auth0 from \"auth0-js\";\nimport JwtDecode from \"jwt-decode\";\nconst LOGIN_SUCCESS_PAGE = \"/home\";\nconst LOGIN_FAILURE_PAGE = \"/\";\nexport default class Auth {\n  constructor() {\n    this.auth = new auth0.WebAuth({\n      domain: \"dev-1ffztey5.auth0.com\",\n      clientID: \"O4izGk4XgAj4MwvHIRZUx7nTuFfmL96M\",\n      redirectUri: \"http://localhost:3000/callback\",\n      audience: \"https://dev-1ffztey5.auth0.com/userinfo\",\n      responseType: \"token id_token\",\n      scope: \"openid profile\"\n    });\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    this.auth.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth.parseHash((err, authResults) => {\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify(authResults.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        location.hash = \"\";\n        location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    location.pathname = LOGIN_FAILURE_PAGE;\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"id_token\")) return JwtDecode(localStorage.getItem(\"id_token\"));else return {};\n  }\n\n}","map":{"version":3,"sources":["/home/ruchitha/react-portfolio/src/auth/Auth.js"],"names":["auth0","JwtDecode","LOGIN_SUCCESS_PAGE","LOGIN_FAILURE_PAGE","Auth","constructor","auth","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","bind","authorize","handleAuthentication","parseHash","err","authResults","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","location","hash","pathname","console","log","isAuthenticated","parse","getItem","logout","removeItem","getProfile"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,kBAAkB,GAAG,OAA3B;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AACA,eAAe,MAAMC,IAAN,CAAW;AASxBC,EAAAA,WAAW,GAAG;AAAA,SARdC,IAQc,GARP,IAAIN,KAAK,CAACO,OAAV,CAAkB;AACvBC,MAAAA,MAAM,EAAE,wBADe;AAEvBC,MAAAA,QAAQ,EAAE,kCAFa;AAGvBC,MAAAA,WAAW,EAAE,gCAHU;AAIvBC,MAAAA,QAAQ,EAAE,yCAJa;AAKvBC,MAAAA,YAAY,EAAE,gBALS;AAMvBC,MAAAA,KAAK,EAAE;AANgB,KAAlB,CAQO;AACZ,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,GAAG;AACN,SAAKR,IAAL,CAAUU,SAAV;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,IAAL,CAAUY,SAAV,CAAoB,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACxC,UAAIA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,OAA1D,EAAmE;AACjE,YAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CACdL,WAAW,CAACM,SAAZ,GAAwB,IAAxB,GAA+B,IAAIC,IAAJ,GAAWC,OAAX,EADjB,CAAhB;AAGAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCV,WAAW,CAACC,WAAjD;AACAQ,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCV,WAAW,CAACE,OAA7C;AACAO,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC;AACAQ,QAAAA,QAAQ,CAACC,IAAT,GAAgB,EAAhB;AACAD,QAAAA,QAAQ,CAACE,QAAT,GAAoB/B,kBAApB;AACD,OATD,MASO,IAAIiB,GAAJ,EAAS;AACdY,QAAAA,QAAQ,CAACE,QAAT,GAAoB9B,kBAApB;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACD;AACF,KAdD;AAeD;;AACDiB,EAAAA,eAAe,GAAG;AAChB,QAAIb,SAAS,GAAGC,IAAI,CAACa,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,YAArB,CAAX,CAAhB;AACA,WAAO,IAAIX,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACPV,IAAAA,YAAY,CAACW,UAAb,CAAwB,cAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AACAT,IAAAA,QAAQ,CAACE,QAAT,GAAoB9B,kBAApB;AACD;;AACDsC,EAAAA,UAAU,GAAG;AACX,QAAIZ,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAJ,EACE,OAAOrC,SAAS,CAAC4B,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAD,CAAhB,CADF,KAEK,OAAO,EAAP;AACN;;AAjDuB","sourcesContent":["/* eslint no-restricted-globals: 0 */\nimport auth0 from \"auth0-js\";\nimport JwtDecode from \"jwt-decode\";\n\nconst LOGIN_SUCCESS_PAGE = \"/home\";\nconst LOGIN_FAILURE_PAGE = \"/\";\nexport default class Auth {\n  auth = new auth0.WebAuth({\n    domain: \"dev-1ffztey5.auth0.com\",\n    clientID: \"O4izGk4XgAj4MwvHIRZUx7nTuFfmL96M\",\n    redirectUri: \"http://localhost:3000/callback\",\n    audience: \"https://dev-1ffztey5.auth0.com/userinfo\",\n    responseType: \"token id_token\",\n    scope: \"openid profile\",\n  });\n  constructor() {\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    this.auth.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth.parseHash((err, authResults) => {\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify(\n          authResults.expiresIn * 1000 + new Date().getTime()\n        );\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        location.hash = \"\";\n        location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    location.pathname = LOGIN_FAILURE_PAGE;\n  }\n  getProfile() {\n    if (localStorage.getItem(\"id_token\"))\n      return JwtDecode(localStorage.getItem(\"id_token\"));\n    else return {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}